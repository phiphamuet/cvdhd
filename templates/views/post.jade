extends ../layouts/default

include ../mixins/commenting
include ../mixins/post

block content
    style.
        *, *:before, *:after {
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }

        body {
            font-family: 'Nunito', sans-serif;
            color: #384047;
        }

        table {
            max-width: 960px;
            margin: 10px auto;
        }

        caption {
            font-size: 1.6em;
            font-weight: 400;
            padding: 10px 0;
        }

        thead th {
            font-weight: 400;
            background: #8a97a0;
            color: #FFF;
        }

        tr {
            background: #f4f7f8;
            border-bottom: 1px solid #FFF;
            margin-bottom: 5px;
        }

        tr:nth-child(even) {
            background: #e8eeef;
        }

        th, td {
            text-align: left;
            padding: 20px;
            font-weight: 300;
        }

        tfoot tr {
            background: none;
        }

        tfoot td {
            padding: 10px 2px;
            font-size: 0.8em;
            font-style: italic;
            color: #8a97a0;
        }

    if !post
        .jumbotron.text-center
            h2 Invalid post...
            p.lead Please check the url and try again
    else
        p: a(href='/property').text-muted &larr; back to the list properties
            hr
        header
            h1= post.name
        .row
            .col-md-8
                article
                    if post.image[0]
                        div#Image(style="margin-bottom: 20px; margin-top: 20px;")
                    else
                        img(src="http://placehold.it/750x380")
                        //img(src=post.image[1].thumbnail(200, 200))
                    div
                        p.text-muted.text-small Posted
                            if post.publishedDate
                                | on
                                time(datetime=post.publishedDate)=post._.publishedDate.format('MMMM Do, YYYY')
                            if post.categories && post.categories.length
                                |  in
                                each cat, cat_i in post.categories
                                    a(href='/property/' + cat.key)= cat.name
                                    if cat_i < post.categories.length - 1
                                        | ,
                                    else
                                        | |
                            if post.author
                                | by #{post.author.name.full}
                    hr
                    != post.content.full
                //-comments
                div
                    +comment-form()
                    +comment-thread(comments)
            .col-md-4

                .row
                    table()
                        tr
                            th(colspan="2", style="text-align: center") Thông tin
                        tr
                            td.col-md-6 Giá/mét vuông
                            td.col-md-6
                                if !post.price
                                    | Chưa rõ
                                else
                                    | #{post.price} vnđ
                        tr
                            td.col-md-6 Số phòng
                                td.col-md-6
                                    if !post.room
                                        | Chưa rõ số phòng
                                    else
                                        | #{post.room} phòng
                        tr
                            td.col-md-6 Diện tích
                                td.col-md-6
                                    if !post.area
                                        | Chưa rõ diện tích
                                    else
                                        | #{post.area} mét vuông

    script(src='//cdnjs.cloudflare.com/ajax/libs/three.js/r69/three.min.js')
    script.
        if (document.getElementById("Image")) {
            THREE.ImageUtils.crossOrigin = '';
            var manualControl = false;
            var longitude = 0;
            var latitude = 0;
            var savedX;
            var savedY;
            var savedLongitude;
            var savedLatitude;
            // panoramas background
            var post =!{JSON.stringify(post)};
            console.log(post);
            var panoramasArray= [];
            for(var x = 0; x <#{post.image.length}; x ++){
                panoramasArray.push(post.image[x].url);
            }
            console.log(panoramasArray);

            var panoramaNumber = #{post.image.length};
            // setting up the renderer
            renderer = new THREE.WebGLRenderer();
            renderer.setSize(750, 380);//window.innerWidth, window.innerHeight);
            document.getElementById("Image").appendChild(renderer.domElement);
            // creating a new scene
            var scene = new THREE.Scene();
            // adding a camera
            var camera = new THREE.PerspectiveCamera(75, 750 / 380, 1, 1000);
            camera.target = new THREE.Vector3(0, 0, 0);
            // creation of a big sphere geometry
            var sphere = new THREE.SphereGeometry(100, 100, 40);
            sphere.applyMatrix(new THREE.Matrix4().makeScale(-1, 1, 1));
            // creation of the sphere material
            var sphereMaterial = new THREE.MeshBasicMaterial();
            sphereMaterial.map = THREE.ImageUtils.loadTexture(panoramasArray[panoramaNumber])
            // geometry + material = mesh (actual object)
            var sphereMesh = new THREE.Mesh(sphere, sphereMaterial);
            scene.add(sphereMesh);
            // listeners
            document.getElementById("Image").addEventListener("mousedown", onDocumentMouseDown, false);
            document.getElementById("Image").addEventListener("mousemove", onDocumentMouseMove, false);
            document.getElementById("Image").addEventListener("mouseup", onDocumentMouseUp, false);
            render();
            function render() {
                requestAnimationFrame(render);
                if (!manualControl) {
                    longitude += 0.1;
                }
                // limiting latitude from -85 to 85 (cannot point to the sky or under your feet)
                latitude = Math.max(-85, Math.min(85, latitude));
                // moving the camera according to current latitude (vertical movement) and longitude (horizontal movement)
                camera.target.x = 500 * Math.sin(THREE.Math.degToRad(90 - latitude)) * Math.cos(THREE.Math.degToRad(longitude));
                camera.target.y = 500 * Math.cos(THREE.Math.degToRad(90 - latitude));
                camera.target.z = 500 * Math.sin(THREE.Math.degToRad(90 - latitude)) * Math.sin(THREE.Math.degToRad(longitude));
                camera.lookAt(camera.target);
                // calling again render function
                renderer.render(scene, camera);
                //$("#Image > canvas").css("width", "100%");
                //$("#Image > canvas").css("height", "100%");
            }
            while(panoramasArray.length == 0){
                panoramaNumber = (panoramaNumber + 1) % panoramasArray.length
                sphereMaterial.map = THREE.ImageUtils.loadTexture(panoramasArray[panoramaNumber])
            }
            panoramaNumber = (panoramaNumber + 1) % panoramasArray.length
            sphereMaterial.map = THREE.ImageUtils.loadTexture(panoramasArray[panoramaNumber])
            //window.setInterval(function () {
            //    panoramaNumber = (panoramaNumber + 1) % panoramasArray.length
            //    sphereMaterial.map = THREE.ImageUtils.loadTexture(panoramasArray[panoramaNumber])
            //}, 30000);
            // when the mouse is pressed, we switch to manual control and save current coordinates
            function onDocumentMouseDown(event) {
                event.preventDefault();
                manualControl = true;
                savedX = event.clientX;
                savedY = event.clientY;
                savedLongitude = longitude;
                savedLatitude = latitude;
            }

            // when the mouse moves, if in manual contro we adjust coordinates
            function onDocumentMouseMove(event) {
                if (manualControl) {
                    longitude = (savedX - event.clientX) * 0.1 + savedLongitude;
                    latitude = (event.clientY - savedY) * 0.1 + savedLatitude;
                }
            }

            // when the mouse is released, we turn manual control off
            function onDocumentMouseUp(event) {
                manualControl = false;
            }

            // pressing a key (actually releasing it) changes the texture map
            document.onkeyup = function (event) {
                panoramaNumber = (panoramaNumber + 1) % panoramasArray.length
                sphereMaterial.map = THREE.ImageUtils.loadTexture(panoramasArray[panoramaNumber])
            }
        }
block page-js
    script.
        jQuery(function ($) {

            var comments = $('#comments');
            var input = $('.comment-field-input');
            var submit = comments.find('button[type=submit]');


            // Scroll to comments and focus input field
            function scrollToComments(e) {

                e.preventDefault();

                $('html, body').animate({scrollTop: comments.offset().top}, 250);

                input.eq(0).focus();
            }

            $('[href="#comments"]').click(scrollToComments);


            // Check if field has content: enable/disable submit. Disable by default
            submit.attr('disabled', 'disabled');
            input.keyup(function () {
                if ($.trim($(this).val())) {
                    submit.removeAttr('disabled');
                } else {
                    submit.attr('disabled', 'disabled');
                }
            });
        });
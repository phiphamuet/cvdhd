extends ../layouts/default

include ../mixins/commenting
include ../mixins/post

block content

    if !post
        .jumbotron.text-center
            h2 Invalid post...
            p.lead Please check the url and try again
    else
        p: a(href='/property').text-muted &larr; back to the list properties
            hr
        header
            h1= post.name
        .row
            .col-md-8
                article
                    if post.image.exists
                        div#Image(style="margin-bottom: 20px; margin-top: 20px;")
                        //    img(src=post._.image.fit(750, 500)).img-responsive
                    div
                        p.text-muted.text-small Posted
                            if post.publishedDate
                                | on
                                time(datetime=post.publishedDate)=post._.publishedDate.format('MMMM Do, YYYY')
                            if post.categories && post.categories.length
                                |  in
                                each cat, cat_i in post.categories
                                    a(href='/property/' + cat.key)= cat.name
                                    if cat_i < post.categories.length - 1
                                        | ,
                                    else
                                        | |
                            if post.author
                                | by #{post.author.name.full}
                    hr
                    != post.content.full
                //-comments
                div
                    +comment-form()
                    +comment-thread(comments)
            .col-md-2
                p Info Property
                    .row
                        table
                            tr
                                td.col-md-6 Price
                                td.col-md-6 100000$
    script(src='//cdnjs.cloudflare.com/ajax/libs/three.js/r69/three.min.js')
    script.
        THREE.ImageUtils.crossOrigin = '';
        var manualControl = false;
        var longitude = 0;
        var latitude = 0;
        var savedX;
        var savedY;
        var savedLongitude;
        var savedLatitude;
        // panoramas background
        var panoramasArray = ["#{post._.image.fit()}"];
        var panoramaNumber = 0;
        // setting up the renderer
        renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.getElementById("Image").appendChild(renderer.domElement);
        // creating a new scene
        var scene = new THREE.Scene();
        // adding a camera
        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);
        camera.target = new THREE.Vector3(0, 0, 0);
        // creation of a big sphere geometry
        var sphere = new THREE.SphereGeometry(100, 100, 40);
        sphere.applyMatrix(new THREE.Matrix4().makeScale(-1, 1, 1));
        // creation of the sphere material
        var sphereMaterial = new THREE.MeshBasicMaterial();
        sphereMaterial.map = THREE.ImageUtils.loadTexture(panoramasArray[panoramaNumber])
        // geometry + material = mesh (actual object)
        var sphereMesh = new THREE.Mesh(sphere, sphereMaterial);
        scene.add(sphereMesh);
        // listeners
        //document.addEventListener("mousedown", onDocumentMouseDown, false);
        //document.addEventListener("mousemove", onDocumentMouseMove, false);
        //document.addEventListener("mouseup", onDocumentMouseUp, false);
        render();
        function render() {
            requestAnimationFrame(render);
            if (!manualControl) {
                longitude += 0.1;
            }
            // limiting latitude from -85 to 85 (cannot point to the sky or under your feet)
            latitude = Math.max(-85, Math.min(85, latitude));
            // moving the camera according to current latitude (vertical movement) and longitude (horizontal movement)
            camera.target.x = 500 * Math.sin(THREE.Math.degToRad(90 - latitude)) * Math.cos(THREE.Math.degToRad(longitude));
            camera.target.y = 500 * Math.cos(THREE.Math.degToRad(90 - latitude));
            camera.target.z = 500 * Math.sin(THREE.Math.degToRad(90 - latitude)) * Math.sin(THREE.Math.degToRad(longitude));
            camera.lookAt(camera.target);
            // calling again render function
            renderer.render(scene, camera);
            $("#Image > canvas").css("width", "100%");
            $("#Image > canvas").css("height", "100%");
        }
        // when the mouse is pressed, we switch to manual control and save current coordinates
        function onDocumentMouseDown(event) {
            event.preventDefault();
            manualControl = true;
            savedX = event.clientX;
            savedY = event.clientY;
            savedLongitude = longitude;
            savedLatitude = latitude;
        }
        // when the mouse moves, if in manual contro we adjust coordinates
        function onDocumentMouseMove(event) {
            if (manualControl) {
                longitude = (savedX - event.clientX) * 0.1 + savedLongitude;
                latitude = (event.clientY - savedY) * 0.1 + savedLatitude;
            }
        }
        // when the mouse is released, we turn manual control off
        function onDocumentMouseUp(event) {
            manualControl = false;
        }
        // pressing a key (actually releasing it) changes the texture map
        document.onkeyup = function (event) {
            panoramaNumber = (panoramaNumber + 1) % panoramasArray.length
            sphereMaterial.map = THREE.ImageUtils.loadTexture(panoramasArray[panoramaNumber])
        }
block page-js
    script.
        jQuery(function ($) {

            var comments = $('#comments');
            var input = $('.comment-field-input');
            var submit = comments.find('button[type=submit]');


            // Scroll to comments and focus input field
            function scrollToComments(e) {

                e.preventDefault();

                $('html, body').animate({scrollTop: comments.offset().top}, 250);

                input.eq(0).focus();
            }

            $('[href="#comments"]').click(scrollToComments);


            // Check if field has content: enable/disable submit. Disable by default
            submit.attr('disabled', 'disabled');
            input.keyup(function () {
                if ($.trim($(this).val())) {
                    submit.removeAttr('disabled');
                } else {
                    submit.attr('disabled', 'disabled');
                }
            });
        });
